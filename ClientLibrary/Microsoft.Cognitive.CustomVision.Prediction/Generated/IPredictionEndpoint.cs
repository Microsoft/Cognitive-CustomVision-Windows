// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Microsoft.Cognitive.CustomVision.Prediction
{
    using Microsoft.Rest;
    using Models;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// </summary>
    public partial interface IPredictionEndpoint : System.IDisposable
    {
        /// <summary>
        /// The base URI of the service.
        /// </summary>
        System.Uri BaseUri { get; set; }

        /// <summary>
        /// Gets or sets json serialization settings.
        /// </summary>
        JsonSerializerSettings SerializationSettings { get; }

        /// <summary>
        /// Gets or sets json deserialization settings.
        /// </summary>
        JsonSerializerSettings DeserializationSettings { get; }

        /// <summary>
        /// Subscription credentials which uniquely identify client
        /// subscription.
        /// </summary>
        ServiceClientCredentials Credentials { get; }


        /// <summary>
        /// PredictImage
        /// </summary>
        /// <remarks>
        /// Predict an image and saves the result
        /// </remarks>
        /// <param name='projectId'>
        /// Format - uuid. The project id
        /// </param>
        /// <param name='imageData'>
        /// </param>
        /// <param name='iterationId'>
        /// Format - uuid. Optional. Specifies the id of a particular iteration
        /// to evaluate against.
        /// The default iteration for the project will be used when not
        /// specified
        /// </param>
        /// <param name='application'>
        /// Optional. Specifies the name of application using the endpoint
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ImagePredictionResultModel>> FiveaThreeZeroFourFourfSixZeroEightfaFiveeZeroSixbEightNineZerofOneSixFourWithHttpMessagesAsync(string projectId, string imageData, string iterationId = default(string), string application = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// PredictImageUrl
        /// </summary>
        /// <remarks>
        /// Predict an image url and saves the result
        /// </remarks>
        /// <param name='projectId'>
        /// Format - uuid. The project id
        /// </param>
        /// <param name='iterationId'>
        /// Format - uuid. Optional. Specifies the id of a particular iteration
        /// to evaluate against.
        /// The default iteration for the project will be used when not
        /// specified
        /// </param>
        /// <param name='application'>
        /// Optional. Specifies the name of application using the endpoint
        /// </param>
        /// <param name='imageUrl'>
        /// An {Iris.Web.Api.Models.ImageUrl} that contains the url of the
        /// image to be evaluated
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ImagePredictionResultModel>> FiveaThreeZeroFourFourfSixZeroEightfaFiveeZeroSixbEightNineZerofOneSixThreeWithHttpMessagesAsync(string projectId, string iterationId = default(string), string application = default(string), ImageUrl imageUrl = default(ImageUrl), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// PredictImageUrlWithNoStore
        /// </summary>
        /// <remarks>
        /// Predict an image url without saving the result
        /// </remarks>
        /// <param name='projectId'>
        /// Format - uuid. The project id
        /// </param>
        /// <param name='iterationId'>
        /// Format - uuid. Optional. Specifies the id of a particular iteration
        /// to evaluate against.
        /// The default iteration for the project will be used when not
        /// specified
        /// </param>
        /// <param name='application'>
        /// Optional. Specifies the name of application using the endpoint
        /// </param>
        /// <param name='imageUrl'>
        /// An {Iris.Web.Api.Models.ImageUrl} that contains the url of the
        /// image to be evaluated
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ImagePredictionResultModel>> FiveaThreeZeroFourFourfSixZeroEightfaFiveeZeroSixbEightNineZerofOneSixFiveWithHttpMessagesAsync(string projectId, string iterationId = default(string), string application = default(string), ImageUrl imageUrl = default(ImageUrl), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

        /// <summary>
        /// PredictImageWithNoStore
        /// </summary>
        /// <remarks>
        /// Predict an image without saving the result
        /// </remarks>
        /// <param name='projectId'>
        /// Format - uuid. The project id
        /// </param>
        /// <param name='imageData'>
        /// </param>
        /// <param name='iterationId'>
        /// Format - uuid. Optional. Specifies the id of a particular iteration
        /// to evaluate against.
        /// The default iteration for the project will be used when not
        /// specified
        /// </param>
        /// <param name='application'>
        /// Optional. Specifies the name of application using the endpoint
        /// </param>
        /// <param name='customHeaders'>
        /// The headers that will be added to request.
        /// </param>
        /// <param name='cancellationToken'>
        /// The cancellation token.
        /// </param>
        Task<HttpOperationResponse<ImagePredictionResultModel>> FiveaThreeZeroFourFourfSixZeroEightfaFiveeZeroSixbEightNineZerofOneSixSixWithHttpMessagesAsync(string projectId, string imageData, string iterationId = default(string), string application = default(string), Dictionary<string, List<string>> customHeaders = null, CancellationToken cancellationToken = default(CancellationToken));

    }
}
